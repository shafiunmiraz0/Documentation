apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: <namespace>
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      annotations:
        kubernetes.io/change-cause: redis:6.0.3-alpine
      labels:
        app: redis
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: redis
          image: redis:6.0.3-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis-port
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          startupProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 15
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
        - name: redis-data
          persistentVolumeClaim:
            claimName: redis-pvc
      restartPolicy: Always